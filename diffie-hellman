#include <stdio.h>
#include <stdlib.h>
#include <math.h>
long long int power(long long int base, long long int exp, long long int mod) {
    long long int result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 == 1) {
            result = (result * base) % mod;
        }
        exp = exp >> 1;
        base = (base * base) % mod;
    }
    return result;
}
int main() {
    long long int p, g, a, b;
    printf("Enter a prime number (p): ");
    scanf("%lld", &p);
    printf("Enter a primitive root modulo %lld (g): ", p);
    scanf("%lld", &g);
    printf("Enter Alice's private key: ");
    scanf("%lld", &a);
    printf("Enter Bob's private key: ");
    scanf("%lld", &b);
    long long int A = power(g, a, p);
    long long int B = power(g, b, p); 
    long long int shared_secret_A = power(B, a, p); 
    long long int shared_secret_B = power(A, b, p); 
    printf("Alice's public key: %lld\n", A);
    printf("Bob's public key: %lld\n", B);
    printf("Shared secret calculated by Alice: %lld\n", shared_secret_A);
    printf("Shared secret calculated by Bob: %lld\n", shared_secret_B);
    if (shared_secret_A == shared_secret_B) {
        printf("The shared secret key is: %lld\n", shared_secret_A);
    } else {
        printf("Error: The shared secrets do not match!\n");
    }
    return 0;
}
